"""
Django settings for DataSaaS project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import dj_database_url
import os   # ✅ added for path handling

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY", default=os.environ.get("SECRET_KEY", "fallback-secret"))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", default=os.environ.get("DEBUG", False), cast=bool)

ALLOWED_HOSTS = [
    "datasaas.up.railway.app",
    "localhost",
    "127.0.0.1",
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #TAILWIND
    'tailwind',
    'theme',

    #APPS
    'accounts',
    'analytics',

    # AUTHENTICATION - COMMENTED OUT ALLAUTH
    'django.contrib.sites',   
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    # Providers (you can add more later) - COMMENTED OUT ALLAUTH
    'allauth.socialaccount.providers.google',
]

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]

# ================= OAuth (Google) =================
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': ['profile', 'email'],
        'AUTH_PARAMS': {'access_type': 'online'},
        # Remove APP completely
        # 'APP': { 'client_id': ..., 'secret': ..., 'key': '' } 
    },
}

# Read Google OAuth credentials from environment variables
OAUTH_GOOGLE_CLIENT_ID = config(
    "OAUTH_GOOGLE_CLIENT_ID",
    default=os.environ.get("OAUTH_GOOGLE_CLIENT_ID", "")
)
OAUTH_GOOGLE_SECRET = config(
    "OAUTH_GOOGLE_SECRET",
    default=os.environ.get("OAUTH_GOOGLE_SECRET", "")
)

SITE_ID = 1  # - COMMENTED OUT ALLAUTH SITE ID

TAILWIND_APP_NAME = 'theme'
INTERNAL_IPS = ['127.0.0.1']

# npm path
# ✅ Removed Windows-specific path; Railway uses system Node.js
# NPM_BIN_PATH = "C:/Program Files/nodejs/npm.cmd"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',

    #whenever i set debug = false and allowed hosts = ['*'] so to solve that 
    "whitenoise.middleware.WhiteNoiseMiddleware",  # ✅ must be right after SecurityMiddleware

    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    #allauth - COMMENTED OUT
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'DataSaaS.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],  # Make sure this folder exists at project root
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DataSaaS.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     "default": dj_database_url.parse(config("DATABASE_URL"))
# }

DATABASES = {
    "default": dj_database_url.config(
        default=f"sqlite:///{BASE_DIR / 'db.sqlite3'}"
    )
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# ✅ Added for production (Tailwind + Whitenoise)
STATIC_ROOT = BASE_DIR / "staticfiles"  # where collectstatic will put files
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Media files (User uploaded files)
# https://docs.djangoproject.com/en/5.2/topics/files/
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Authentication settings - ENABLE FOR CUSTOM AUTH
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = 'home'

#for production
TAILWIND_DEV_MODE = False  # False for production, True for dev


#just checking deployement